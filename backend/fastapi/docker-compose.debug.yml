volumes:
  app:
  postgres_data:
  mongo_data:
  redis_data:
  localstack_data:
  otel-lgtm-data:


networks:
  dev_network:
    driver: bridge

services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - app:/app/app
    command: [ "sh", "-c", "pip install debugpy && python -m debugpy --wait-for-client --listen 0.0.0.0:5678 -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000" ]
    ports:
      - ${FASTAPI_PORT}:${FASTAPI_PORT}
      - ${DEBUGPY_PORT}:${DEBUGPY_PORT}
    networks:
      - dev_network
    # depends_on:
    #   - otel-lgtm
    env_file:
      - path: .env
        required: true

  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev_network
    env_file:
      - path: .env
        required: true # default

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - dev_network
    depends_on:
      - postgres
    env_file:
      - path: .env
        required: true # default

  mongodb:
    image: mongo
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - mongo_data:/data/db
    networks:
      - dev_network
    env_file:
      - path: .env
        required: true # default

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - ${MONGO_EXPRESS_PORT}:${MONGO_EXPRESS_PORT}
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    depends_on:
      - mongodb
    networks:
      - dev_network
    env_file:
      - path: .env
        required: true # default

  localstack:
    image: localstack/localstack
    ports:
      - 4566:4566
    environment:
      SERVICES: ${LOCALSTACK_SERVICES}
      DEBUG: ${LOCALSTACK_DEBUG}
    volumes:
      - localstack_data:/var/lib/localstack
    networks:
      - dev_network
    env_file:
      - path: .env
        required: true # default

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - dev_network

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:${KAFKA_PORT}
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:${KAFKA_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - dev_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - ${KAFKA_UI_PORT}:${KAFKA_UI_PORT}
    environment:
      - KAFKA_CLUSTERS_0_NAME=${KAFKA_CLUSTER_NAME}
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:${KAFKA_PORT}
    depends_on:
      - kafka
    networks:
      - dev_network
    env_file:
      - path: .env
        required: true # default

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - dev_network
    env_file:
      - path: .env
        required: true # default

  # otel-lgtm:
  #   image: grafana/otel-lgtm:latest
  #   ports:
  #     - "3000:3000" # Grafana UI
  #     - "4317:4317" # OTLP gRPC (traces, metrics, logs)
  #     - "4318:4318" # OTLP HTTP
  #     - "9090:9090" # Prometheus
  #     - "3100:3100" # Loki
  #     - "8080:8080" # Tempo (traces)
  #   volumes:
  #     - otel-lgtm-data:/etc/data
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
  #     - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
  #   networks:
  #     - dev_network
  #   env_file:
  #     - path: .env
  #       required: true # default
